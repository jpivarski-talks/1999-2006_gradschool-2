comm[ el1_, el2_ ] = el1 . el2 - el2 . el1

conj[ el1_ ] = Conjugate[ Transpose[ el1 ] ]

r = { 1, 0, 0 } ; g = { 0, 1, 0 } ; b = { 0, 0, 1 }

l1 = { {0,1,0}, {1,0,0}, {0,0,1} }

l2 = { {0,-I,0}, {I,0,0}, {0,0,I} }

l3 = { {1,0,0}, {0,-1,0}, {0,0,1} }

l4 = { {0,0,2+I}, {0,0,0}, {2,0,0} }

l5 = { {0,0,1}, {0,0,0}, {0,0,0} }

abstract = { {aa,bb,cc}, {dd,ee,ff}, {gg,hh,ii} }

Solve[ conj[ abstract ] . abstract == { {1,0,0}, {0,1,0}, {0,0,1} },
       { aa, bb, cc, dd, ee, ff, gg, hh, ii } ]


l6 = { {0,0,0}, {0,0,2+I}, {0,2,0} }

l7 = { {0,0,0}, {0,0,1}, {0,0,0} }

l8 = { {1,0,0}, {0,1,0}, {0,0,-2} } / Sqrt[3]








lambda[ i_ ] = If[ i == 1, l1, If[ i == 2, l2, If[ i == 3, l3, If[ i == 4, l4,
                   If[ i == 5, l5, If[ i == 6, l6, If[ i == 7, l7, If[ i == 8, l8, 0 ] ] ] ] ] ] ] ]

g2r = ( l1 + I * l2 ) / 2 ; g2r . g

r2g = ( l1 - I * l2 ) / 2 ; r2g . r

r2b = ( l4 + I * l5 ) / 2 ; r2b . r

b2r = ( l4 - I * l5 ) / 2 ; b2r . b

g2b = ( l6 + I * l7 ) / 2 ; g2b . g

b2g = ( l6 - I * l7 ) / 2 ; b2g . b

